

{
  "itemIdentifier": "ogc.cwl.v1_2_1.ScatterMethod",
  "name": "ScatterMethod",
  "itemClass": "schema",
  "abstract": "If 'scatter' declares more than one input parameter, 'scatterMethod'\ndescribes how to decompose the input into a discrete set of jobs.\n\n- dotproduct: specifies that each of the input arrays are aligned and\n  one element taken from each array to construct each job. It is an\n  error if all input arrays are not the same length.\n\n- nested_crossproduct: specifies the Cartesian product of the inputs, producing \n  a job for every combination of the scattered inputs. The output must be nested \n  arrays for each level of scattering, in the order that the input arrays\n  are listed in the 'scatter' field.\n\n- flat_crossproduct: specifies the Cartesian product of the inputs, producing a \n  job for every combination of the scattered inputs. The output arrays must be \n  flattened to a single level, but otherwise listed in the order that the input \n  arrays are listed in the 'scatter' field.\n",
  "status": "under-development",
  "dateTimeAddition": "2025-09-29T14:14:37.709218",
  "dateOfLastChange": "2025-09-29",
  "register": "ogc-building-block-register",
  "link": "https://www.commonwl.org/v1.2/Workflow.html",
  "version": "1.2.1",
  "tags": [
    "cwl"
  ],
  "shaclShapes": {},
  "schema": {
    "application/yaml": "https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/ScatterMethod/schema.yaml",
    "application/json": "https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/ScatterMethod/schema.json"
  },
  "sourceSchema": "https://ogcincubator.github.io/bblocks-cwl/_sources/v1_2_1/ScatterMethod/schema.yaml",
  "sourceFiles": "https://ogcincubator.github.io/bblocks-cwl/_sources/v1_2_1/ScatterMethod/",
  "rdfData": [],
  "validationPassed": true,
  "annotatedSchema": "additionalProperties: false\ndefault: dotproduct\ndescription: \"If 'scatter' declares more than one input parameter, 'scatterMethod'\\ndescribes\n  how to decompose the input into a discrete set of jobs.\\n\\n- dotproduct: specifies\n  that each of the input arrays are aligned and\\n  one element taken from each array\n  to construct each job. It is an\\n  error if all input arrays are not the same length.\\n\\n-\n  nested_crossproduct: specifies the Cartesian product of the inputs, producing \\n\n  \\ a job for every combination of the scattered inputs. The output must be nested\n  \\n  arrays for each level of scattering, in the order that the input arrays\\n  are\n  listed in the 'scatter' field.\\n\\n- flat_crossproduct: specifies the Cartesian product\n  of the inputs, producing a \\n  job for every combination of the scattered inputs.\n  The output arrays must be \\n  flattened to a single level, but otherwise listed\n  in the order that the input \\n  arrays are listed in the 'scatter' field.\\n\"\nenum:\n- dotproduct\n- nested_crossproduct\n- flat_crossproduct\nrequired:\n- timelimit\n- class\ntitle: scatterMethod\ntype: string\n",
  "gitRepository": "https://github.com/ogcincubator/bblocks-cwl",
  "gitPath": "_sources/v1_2_1/ScatterMethod"
}