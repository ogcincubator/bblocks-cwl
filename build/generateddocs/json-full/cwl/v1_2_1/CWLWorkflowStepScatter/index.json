

{
  "itemIdentifier": "ogc.cwl.v1_2_1.CWLWorkflowStepScatter",
  "name": "CWLWorkflowStepScatter",
  "itemClass": "schema",
  "abstract": "CWLWorkflowStepScatter",
  "status": "under-development",
  "dateTimeAddition": "2025-09-29T14:14:37.704593",
  "dateOfLastChange": "2025-09-30",
  "register": "ogc-building-block-register",
  "link": "https://www.commonwl.org/v1.2/Workflow.html",
  "version": "1.2.1",
  "tags": [
    "cwl"
  ],
  "shaclShapes": {},
  "dependsOn": [
    "ogc.cwl.v1_2_1.CWLTextPatternID",
    "ogc.cwl.v1_2_1.IdentifierArray"
  ],
  "schema": {
    "application/yaml": "https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/CWLWorkflowStepScatter/schema.yaml",
    "application/json": "https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/CWLWorkflowStepScatter/schema.json"
  },
  "sourceSchema": "https://ogcincubator.github.io/bblocks-cwl/_sources/v1_2_1/CWLWorkflowStepScatter/schema.yaml",
  "sourceFiles": "https://ogcincubator.github.io/bblocks-cwl/_sources/v1_2_1/CWLWorkflowStepScatter/",
  "rdfData": [],
  "validationPassed": true,
  "annotatedSchema": "properties:\n  scatter:\n    description: 'The scatter field specifies one or more input parameters which will\n      be scattered.\n\n\n      An input parameter may be listed more than once. The declared type of each\n\n      input parameter implicitly becomes an array of items of the input parameter\n      type.\n\n      If a parameter is listed more than once, it becomes a nested array. As a result,\n\n      upstream parameters which are connected to scattered parameters must be arrays.\n\n\n      All output parameter types are also implicitly wrapped in arrays. Each job\n\n      in the scatter results in an entry in the output array.\n\n\n      If any scattered parameter runtime value is an empty array, all outputs are\n\n      set to empty arrays and no work is done for the step, according to applicable\n      scattering rules.\n\n      '\n    oneOf:\n    - $ref: https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/CWLTextPatternID/schema.yaml\n    - $ref: https://ogcincubator.github.io/bblocks-cwl/build/annotated/cwl/v1_2_1/IdentifierArray/schema.yaml\n    title: Scatter\n  scatterMethod:\n    additionalProperties: false\n    default: dotproduct\n    description: \"If 'scatter' declares more than one input parameter, 'scatterMethod'\\ndescribes\n      how to decompose the input into a discrete set of jobs.\\n\\n- dotproduct: specifies\n      that each of the input arrays are aligned and\\n  one element taken from each\n      array to construct each job. It is an\\n  error if all input arrays are not the\n      same length.\\n\\n- nested_crossproduct: specifies the Cartesian product of the\n      inputs, producing \\n  a job for every combination of the scattered inputs. The\n      output must be nested \\n  arrays for each level of scattering, in the order\n      that the input arrays\\n  are listed in the 'scatter' field.\\n\\n- flat_crossproduct:\n      specifies the Cartesian product of the inputs, producing a \\n  job for every\n      combination of the scattered inputs. The output arrays must be \\n  flattened\n      to a single level, but otherwise listed in the order that the input \\n  arrays\n      are listed in the 'scatter' field.\\n\"\n    enum:\n    - dotproduct\n    - nested_crossproduct\n    - flat_crossproduct\n    required:\n    - timelimit\n    - class\n    title: scatterMethod\n    type: string\ntype: object\n",
  "gitRepository": "https://github.com/ogcincubator/bblocks-cwl",
  "gitPath": "_sources/v1_2_1/CWLWorkflowStepScatter"
}